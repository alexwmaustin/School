name: Alex Austin
Lab Section: 03
Student ID: 001424250
Lab: 4
Question: 1

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package question.pkg1;

/**
 *
 * @author austinaw
 */
public class UpperTriangularMatrix
    {
    
        private int[] upMatrix;
        private int size;
    
        public UpperTriangularMatrix(int n)
        {
            if(n <= 1)
                n = 1;
            size  = (n*(n+1))/2;
            
            upMatrix = new int[size];
            for(int i =0;i<size;i++)
            {
                upMatrix[i]=0;
            }
        }
        public UpperTriangularMatrix(Matrix upTriM) throws IllegalArgumentException
        {
            int index = 0;
            size  = (upTriM.getCol()*(upTriM.getCol()+1))/2;
            upMatrix = new int[size];
            
            if(upTriM.isUpperTr())
            {
                    for(int i = 0; i < upTriM.getRows(); i++)
                        for(int j = i; j < upTriM.getCol() ; j++)
                        {
                            upMatrix[index]=upTriM.getMatrixData()[i][j];
                            index++;
                        }
            }
            else
            {
                throw new IllegalArgumentException("Not upper triangular.");
            }
        }
        public int getDim()
        {
            return (int) (0.5*(Math.sqrt((8.0*size)+1)-1));
        }
        public int getElement(int i, int j) throws IndexOutOfBoundsException
        {
            int index=0;
            Matrix newMatrix = fullMatrix();
            if  ( i < newMatrix.getRows() && j < newMatrix.getCol() ) 
            {
			return newMatrix.getMatrixData()[i][j];
            }
            else
            {
			throw new IndexOutOfBoundsException("Invalid indexes.");
            }
        }
        public void setElement(int x, int i, int j) throws IndexOutOfBoundsException,IllegalArgumentException
        {
            Matrix newMatrix = fullMatrix();
            if( i < newMatrix.getRows() && j < newMatrix.getCol() ) 
            {
		if((i*i)<=(i*j))
                {
                    newMatrix.getMatrixData()[i][j]= x;
                }
                else if(newMatrix.getMatrixData()[i][j]==0&&x==0)
                {
                    newMatrix.getMatrixData()[i][j]= 0;
                }
                else
                {
                    throw new IllegalArgumentException("Incorrect Argument.");
                }
            }
            else 
            {
		throw new IndexOutOfBoundsException("Invalid indexes.");
            }
        }
        public Matrix fullMatrix()
        {
            int index = 0;
            //System.out.println(""+getDim());
            Matrix newMatrix = new Matrix(this.getDim(),this.getDim());
            for(int i = 0; i < newMatrix.getRows() ; i++)
                for(int j = i; j < newMatrix.getCol() ; j++)
                {
                    //System.out.println(newMatrix.getRows()+" "+newMatrix.getCol()+" "+i+" "+j);
                    newMatrix.getMatrixData()[i][j]=upMatrix[index];
                    index++;
                }
            return newMatrix;        
        }
        public void print1DArray()
        {
            for(int i = 0; i < size; i++)
                System.out.println(upMatrix[i]+"  ");
        }
        public String toString()
        {
            Matrix newMatrix = fullMatrix();
            String output = new String(); // creates an empty string
        	for(int i = 0; i < newMatrix.getRows(); i++){
                    for(int j = 0; j < newMatrix.getCol(); j++){
        		output += newMatrix.getMatrixData()[i][j] + "  ";
        		}
        	output += "\n";
        	}
       		 return output;
        }
    