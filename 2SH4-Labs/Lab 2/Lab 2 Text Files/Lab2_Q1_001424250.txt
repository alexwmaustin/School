/*
name: Alex Austin
Lab Section: 03
Student ID: 001424250
Lab: 2
Question: 1
*/

#include <stdio.h>
#include <stdlib.h>
#include <math.h>

void print_vector(double array[], int size);//Function prototypes
void add_vectors( double vector1[],double vector2[],double vector3[], int n);
double scalar_prod(double vector1[],double vector2[]);
double norm2(double vector1[]);

int main(void) 
{
    int vec1L,vec2L;//variable initialization
    double scalProd,norm;
    
    double x[] = {2,4,6};//create arrays
    double y[] = {0,1,2};
    printf("Vector 1: ")
    print_vector(x,3);
    printf("Vector 2: ")
    print_vector(y,3);
   
    vec1L= (sizeof x/sizeof x[0]);//determining the size of the array by dividing the total bit size by one index's bit size
    vec2L= (sizeof y/sizeof y[0]);
    if(vec1L == vec2L)//determining the if the vectors are the same length
    {
        double z[vec1L];//creating a third vector to store the sum of the two vectors
        add_vectors(x,y,z,vec1L);
    }
    else
    {
        printf("The two vectors are not the same length\n");
    }
    scalProd = scalar_prod(x,y);
    printf("Scalar Product: %f\n",scalProd);
    
    norm = norm2(x);
    printf("norm: %f\n",norm);
    
    
    return 0;
}
void print_vector(double array[], int size)
{
    //use a for loop to print each char
    for (int i=0;i<size;i++)
        printf("%f, ",array[i]);
    printf("\n");
}
void add_vectors( double vector1[],double vector2[],double vector3[], int n)
{
    for (int i=0;i<n;i++)//looping through the size of the vectors
    {
        vector3[i]=(vector1[i]+vector2[i]);//setting the third vector to the addition of the vectors at the same location
    }
    printf("Added Vectors: ")
    print_vector(vector3,n);
}
double scalar_prod(double vector1[],double vector2[])
{
    double scalProd=0;
    for (int i=0; i < 10; i++)
    {
        scalProd += (vector1[i]*vector2[i]);//multiplying each increment of each vector to determine the scalar product
    }
    return scalProd;
}
double norm2(double vector1[])
{
    double norm;
    norm = sqrt(scalar_prod(vector1,vector1));//taking the L2 norm of one vector
    return norm;
}
